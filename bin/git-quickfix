#!/usr/bin/env sh
# Open Vim with Git changes as quickfix entries
#
# Supports a range of commits, or defaults to the HEAD commit. Also supports
# loading unstaged or staged changes as quickfix entries. Useful for stepping
# through changes in one or more commits, or quickly picking back up where you
# left off after a WIP commit.
#
# Usage:
#
#     git quickfix
#     git quickfix HEAD~3
#     git quickfix HEAD~3..
#     git quickfix @{u}..
#     git quickfix -m modified
#     git quickfix -m staged
#     git quickfix abcdef -- path/to/file.foo
#     git quickfix -- -w

NAME=$(basename "$0")
TEMP="${TMPDIR-/tmp}/${NAME}.${$}.$(awk \
    'BEGIN {srand(); printf "%d\n", rand() * 10^10}')"

QFLIST="${TEMP}/quickfix.txt"

trap '
    excode=$?; trap - EXIT;
    rm -rf -- '"$TEMP"'
    exit $excode
' INT TERM EXIT

mode='commit'
while getopts hm:x opt; do
    case $opt in
    m) mode="$OPTARG";;
    h) awk 'NR == 1 { next } /^$/ { exit } { print substr($0, 3) }' "$0"
       exit ;;
    x) set -x;;
    esac
done
shift $(( OPTIND - 1 ))

mkdir -p -m 700 "$TEMP"

{
    if [ "$mode" = 'modified' ]; then
        git diff -p -U0 --diff-filter=AM "$@"
    elif [ "$mode" = 'staged' ]; then
        git diff --cached -p -U0 --diff-filter=AM "$@"
    else
        if [ $# -gt 1 ]; then
            shift 1
            ref="$1"
        else
            ref='HEAD'
        fi

        case "$ref" in
            *..*) git diff -p -U0 --diff-filter=AM -r "$ref" "$@";;
            *) git show --first-parent -m -p -U0 --diff-filter=AM "$ref" "$@";;
        esac

    fi;
} | diff-to-quickfix > "$QFLIST"

if [ ! -s "$QFLIST" ]; then
    printf 'No %s changes.\n' "$mode" 1>&2
    exit 1
fi

# Open with Vim if outputting to a tty, otherwise just output directly.
if [ -t 1 ]; then
    # bd1 deletes the initial "[No Name]" buffer.
    $EDITOR +bd1 -q "$QFLIST"
else
    cat "$QFLIST"
fi
